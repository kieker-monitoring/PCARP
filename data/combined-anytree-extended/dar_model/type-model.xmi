<?xml version="1.0" encoding="ASCII"?>
<type:TypeModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:type="platform:/resource/Kieker/model/analysismodel.ecore/type">
  <componentTypes key="++unknown-component++">
    <value signature="++unknown-component++" name="++unknown-component++" package="">
      <providedOperations key="++unknown-operation++">
        <value signature="++unknown-operation++" name="++unknown-operation++" returnType="&lt;NO-RETURN-TYPE>"/>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.cachedsearch.cachedsearch">
    <value signature="anytree.cachedsearch.cachedsearch" name="cachedsearch" package="anytree.cachedsearch">
      <providedOperations key="protected Object _cache(Object)">
        <value signature="protected Object _cache(Object)" name="_cache" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.cachedsearch._cache">
    <value signature="anytree.cachedsearch._cache" name="_cache" package="anytree.cachedsearch">
      <providedOperations key="public Object decorator(Object)">
        <value signature="public Object decorator(Object)" name="decorator" returnType="Object">
          <modifiers>public</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.render.ContStyle">
    <value signature="anytree.render.ContStyle" name="ContStyle" package="anytree.render">
      <providedOperations key="private void __init__()">
        <value signature="private void __init__()" name="__init__" returnType="void">
          <modifiers>private</modifiers>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.render.AbstractStyle">
    <value signature="anytree.render.AbstractStyle" name="AbstractStyle" package="anytree.render">
      <providedOperations key="private void __init__(Object, Object, Object)">
        <value signature="private void __init__(Object, Object, Object)" name="__init__" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="public Object empty()">
        <value signature="public Object empty()" name="empty" returnType="Object">
          <modifiers>public</modifiers>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.node.node.Node">
    <value signature="anytree.node.node.Node" name="Node" package="anytree.node.node">
      <providedOperations key="private void __init__(Object, Object, Object, Object)">
        <value signature="private void __init__(Object, Object, Object, Object)" name="__init__" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.node.nodemixin.NodeMixin">
    <value signature="anytree.node.nodemixin.NodeMixin" name="NodeMixin" package="anytree.node.nodemixin">
      <providedOperations key="public void parent(Object)">
        <value signature="public void parent(Object)" name="parent" returnType="void">
          <modifiers>public</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private void __check_loop(Object)">
        <value signature="private void __check_loop(Object)" name="__check_loop" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="public void iter_path_reverse()">
        <value signature="public void iter_path_reverse()" name="iter_path_reverse" returnType="void">
          <modifiers>public</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="public Object parent()">
        <value signature="public Object parent()" name="parent" returnType="Object">
          <modifiers>public</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="private void __detach(Object)">
        <value signature="private void __detach(Object)" name="__detach" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private void __attach(Object)">
        <value signature="private void __attach(Object)" name="__attach" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="protected void _pre_attach(Object)">
        <value signature="protected void _pre_attach(Object)" name="_pre_attach" returnType="void">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private Object __children_or_empty()">
        <value signature="private Object __children_or_empty()" name="__children_or_empty" returnType="Object">
          <modifiers>private</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="protected void _post_attach(Object)">
        <value signature="protected void _post_attach(Object)" name="_post_attach" returnType="void">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="public Object children()">
        <value signature="public Object children()" name="children" returnType="Object">
          <modifiers>public</modifiers>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.render.RenderTree">
    <value signature="anytree.render.RenderTree" name="RenderTree" package="anytree.render">
      <providedOperations key="private void __init__(Object, Object, Object, Object)">
        <value signature="private void __init__(Object, Object, Object, Object)" name="__init__" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private Object __iter__()">
        <value signature="private Object __iter__()" name="__iter__" returnType="Object">
          <modifiers>private</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="private void __next(Object, Object, Object)">
        <value signature="private void __next(Object, Object, Object)" name="__next" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private Object __item(Object, Object, Object)">
        <value signature="private Object __item(Object, Object, Object)" name="__item" returnType="Object">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.render.render">
    <value signature="anytree.render.render" name="render" package="anytree.render">
      <providedOperations key="protected void _is_last(Object)">
        <value signature="protected void _is_last(Object)" name="_is_last" returnType="void">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.iterators.abstractiter.AbstractIter">
    <value signature="anytree.iterators.abstractiter.AbstractIter" name="AbstractIter" package="anytree.iterators.abstractiter">
      <providedOperations key="private void __init__(Object, Object, Object, Object)">
        <value signature="private void __init__(Object, Object, Object, Object)" name="__init__" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private Object __iter__()">
        <value signature="private Object __iter__()" name="__iter__" returnType="Object">
          <modifiers>private</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="private Object __next__()">
        <value signature="private Object __next__()" name="__next__" returnType="Object">
          <modifiers>private</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="private Object __init()">
        <value signature="private Object __init()" name="__init" returnType="Object">
          <modifiers>private</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="protected Object _abort_at_level(Object, Object)">
        <value signature="protected Object _abort_at_level(Object, Object)" name="_abort_at_level" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="protected Object _get_children(Object, Object)">
        <value signature="protected Object _get_children(Object, Object)" name="_get_children" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private Object __default_stop(Object)">
        <value signature="private Object __default_stop(Object)" name="__default_stop" returnType="Object">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private Object __default_filter(Object)">
        <value signature="private Object __default_filter(Object)" name="__default_filter" returnType="Object">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.iterators.preorderiter.PreOrderIter">
    <value signature="anytree.iterators.preorderiter.PreOrderIter" name="PreOrderIter" package="anytree.iterators.preorderiter">
      <providedOperations key="protected void _iter(Object, Object, Object, Object)">
        <value signature="protected void _iter(Object, Object, Object, Object)" name="_iter" returnType="void">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.iterators.levelorderiter.LevelOrderIter">
    <value signature="anytree.iterators.levelorderiter.LevelOrderIter" name="LevelOrderIter" package="anytree.iterators.levelorderiter">
      <providedOperations key="protected void _iter(Object, Object, Object, Object)">
        <value signature="protected void _iter(Object, Object, Object, Object)" name="_iter" returnType="void">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
  <componentTypes key="anytree.exporter.dotexporter.DotExporter">
    <value signature="anytree.exporter.dotexporter.DotExporter" name="DotExporter" package="anytree.exporter.dotexporter">
      <providedOperations key="private void __init__(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)">
        <value signature="private void __init__(Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object, Object)" name="__init__" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="public void to_picture(Object)">
        <value signature="public void to_picture(Object)" name="to_picture" returnType="void">
          <modifiers>public</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private Object __iter__()">
        <value signature="private Object __iter__()" name="__iter__" returnType="Object">
          <modifiers>private</modifiers>
        </value>
      </providedOperations>
      <providedOperations key="private void __iter(Object, Object, Object, Object, Object, Object)">
        <value signature="private void __iter(Object, Object, Object, Object, Object, Object)" name="__iter" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private void __iter_options(Object)">
        <value signature="private void __iter_options(Object)" name="__iter_options" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private void __iter_nodes(Object, Object, Object, Object)">
        <value signature="private void __iter_nodes(Object, Object, Object, Object)" name="__iter_nodes" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="protected Object _default_filter(Object)">
        <value signature="protected Object _default_filter(Object)" name="_default_filter" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="protected Object _default_nodenamefunc(Object)">
        <value signature="protected Object _default_nodenamefunc(Object)" name="_default_nodenamefunc" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="protected Object _default_nodeattrfunc(Object)">
        <value signature="protected Object _default_nodeattrfunc(Object)" name="_default_nodeattrfunc" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="public Object esc(Object)">
        <value signature="public Object esc(Object)" name="esc" returnType="Object">
          <modifiers>public</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="private void __iter_edges(Object, Object, Object, Object, Object)">
        <value signature="private void __iter_edges(Object, Object, Object, Object, Object)" name="__iter_edges" returnType="void">
          <modifiers>private</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="protected Object _default_edgeattrfunc(Object, Object)">
        <value signature="protected Object _default_edgeattrfunc(Object, Object)" name="_default_edgeattrfunc" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
      <providedOperations key="protected Object _default_edgetypefunc(Object, Object)">
        <value signature="protected Object _default_edgetypefunc(Object, Object)" name="_default_edgetypefunc" returnType="Object">
          <modifiers>protected</modifiers>
          <parameterTypes>Object</parameterTypes>
        </value>
      </providedOperations>
    </value>
  </componentTypes>
</type:TypeModel>
